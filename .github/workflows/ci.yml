name: Build Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# env:
#   # AZURE_CREDENTIALS_CLIENT: '{"clientId":"${{ vars.CLIENT_ID }}","clientSecret":"${{ vars.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ vars.TENANT_ID }}"}'           
#   ACRName: 'vars.ACRName'
#   ACRImageName: '$(vars.AppName)'
#   ACRImageTag: '$(Build.BuildId)'
#   ACRFullName: '$(vars.ACRName).azurecr.io'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    # - name: Dump GitHub context
    #   env:
    #     GITHUB_CONTEXT: ${{ toJson(github) }}
    #   run: echo "$GITHUB_CONTEXT"
    # - name: "Echo in file secrets"
    #   env:
    #     SECRETS_VARS: ${{ toJson(secrets) }}
    #   run: echo "$SECRETS_VARS" > "secrets.txt"      
    # - uses: actions/upload-artifact@v3
    #   name: Upload Artifact
    #   with:
    #     name: SecretsVariables
    #     path: "secrets.txt"
    # - name: "Echo in file"
    #   env:
    #     SECRETS_VARS: ${{ toJson(secrets) }}
    #   run: echo "$env" > "env.txt"      
    # - uses: actions/upload-artifact@v3
    #   name: Upload Artifact
    #   with:
    #     name: ENVVariables
    #     path: "env.txt"

    - uses: actions/checkout@v4
    - name: 'Docker Login'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ vars.ACRName }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    - name: Build the image and push it to ACR
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ vars.ACRName }}.azurecr.io/${{ vars.AppName }}:${{ github.run_number }}
        file: ./Dockerfile
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ vars.AppName }}:${{ github.run_number }}
        release_name: Release ${{ vars.AppName }}:${{ github.run_number }}        
        draft: false
        prerelease: false